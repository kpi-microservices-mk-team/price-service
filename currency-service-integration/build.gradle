plugins {
    id 'java'
    id "org.openapi.generator" version "6.0.0"
}

group 'com.example'
version '1.0.2-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation 'org.springframework:spring-web:5.3.23'
}

def spec = "$projectDir/src/main/resources/currencyservice/openapi.yaml".toString()
def generatedSourcesDir = "$projectDir/generated-src".toString()

openApiGenerate {
    generatorName.set("java")
    generateApiDocumentation.set(false)
    inputSpec = spec
    outputDir = generatedSourcesDir
    modelNameSuffix.set("Dto")
    generateModelTests = false
    generateApiTests = false
    generateApiDocumentation = false
    generateModelDocumentation = false
    library = "resttemplate"

    configOptions = [
            useTags                : 'true',
            dateLibrary            : 'java8',
            interfaceOnly          : 'true',
            skipDefaultInterface   : 'true',
            useApiIgnore           : 'false',
            swaggerAnnotations     : 'true',
            hideGenerationTimestamp: "true",
            implicitHeaders        : "true"
    ]
    globalProperties = [
            apis     : '',
            models   : '',
            supportingFiles: ''
    ]

}

tasks.openApiGenerate {
    doLast {
        delete (
                "$projectDir/generated-src/.openapi-generator",
                "$projectDir/generated-src/api",
                "$projectDir/generated-src/gradle",
                "$projectDir/generated-src/docs",
                "$projectDir/generated-src/.github",
                "$projectDir/generated-src/.openapi-generator",
                "$projectDir/generated-src/src/main/AndroidManifest.xml",
                "$projectDir/generated-src/.gitignore",
                "$projectDir/generated-src/.openapi-generator-ignore",
                "$projectDir/generated-src/.travis.yml",
                "$projectDir/generated-src/build.gradle",
                "$projectDir/generated-src/build.sbt",
                "$projectDir/generated-src/git_push.sh",
                "$projectDir/generated-src/gradle.properties",
                "$projectDir/generated-src/gradlew",
                "$projectDir/generated-src/gradlew.bat",
                "$projectDir/generated-src/pom.xml",
                "$projectDir/generated-src/README.md",
                "$projectDir/generated-src/settings.gradle",
        )
    }
}

openApiValidate {
    println("hello")
    println projectDir
    println(spec)
    inputSpec = spec
}

tasks.openApiGenerate.dependsOn tasks.openApiValidate

compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    getByName("main") {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}
