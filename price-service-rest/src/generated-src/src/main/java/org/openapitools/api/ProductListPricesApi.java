/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import java.util.List;
import org.openapitools.model.ProductPriceDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "ProductListPrices", description = "the ProductListPrices API")
public interface ProductListPricesApi {

    /**
     * POST /api/v1/product-price-list/{currencyCode} : Get price for list of products
     *
     * @param currencyCode Requested currency code (required)
     * @param requestBody List of product ids (optional)
     * @return Get product list prices (status code 200)
     */
    @Operation(
        operationId = "getProductListPrices",
        summary = "Get price for list of products",
        tags = { "product-list-prices" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Get product list prices", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProductPriceDto.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/product-price-list/{currencyCode}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<List<ProductPriceDto>> getProductListPrices(
        @Parameter(name = "currencyCode", description = "Requested currency code", required = true) @PathVariable("currencyCode") String currencyCode,
        @Parameter(name = "request_body", description = "List of product ids") @Valid @RequestBody(required = false) List<Integer> requestBody
    );

}
